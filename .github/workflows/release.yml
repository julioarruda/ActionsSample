name: Release

on: 
  workflow_dispatch:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108
    
    - name: Restore
      run: dotnet restore
      working-directory: ./DemoApp
    
    - name: Build with dotnet
      run: dotnet build --configuration Release
      working-directory: ./DemoApp


    - name: Dotnet Publish
      run: dotnet publish --configuration Release -o netcore 
      working-directory: ./DemoApp

         
    - uses: papeloto/action-zip@v1
      with:
        files: DemoApp/DemoApp/netcore
        dest: netcore.zip
      

    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: DemoApp/DemoApp/netcore
    
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: DemoApp/DemoApp/netcore
        asset_name: netcore
        asset_content_type: application/zip
